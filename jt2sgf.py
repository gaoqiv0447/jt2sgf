
###
# 竞智网棋谱，转为sgf格式棋谱
# author：舒克爸爸
# 日期：2023年6月19日
# version：v0.1
# 问题：还没有处理特殊情况，比如停一手，还有最后一手竞智网会显示“认输”这种汉字，需要手工干预
###
import string
from sgfmill import sgf
# import sgfmill

def add_dollar_separator(s):
    # 将字符串中的左方括号后面加上逗号
    s = s.replace(']', ']@', s.count(']') - 1)
    return s

# 把黑棋数据转换，写入dictionary
def cov_blackdata2dic(s):
    key_int = 1
    # 去掉字符串两端的方括号
    s = s.strip('[]')
    # 按照逗号分割成单个元素
    elements = s.split('@')
    # 初始化结果字典
    d = {}
    # 遍历每个元素
    for elem in elements:
        # 检查元素中冒号的数量
        if elem.count(':') == 1:
            key, val = elem.split(':')
            #print("key= " + key )
        
            subelems = val.strip('[]').split(',')
            #print(type(subelems))
        else:
            key = elem.strip('[]') 
            subelems = []
        # 将子元素存入字典
        d[int(key)*2-1] = subelems
    return d

# 把白棋数据转换，写入dictionary
def cov_whitedata2dic(s):
    key_int = 1
    # 去掉字符串两端的方括号
    s = s.strip('[]')
    # 按照逗号分割成单个元素
    elements = s.split('@')
    # 初始化结果字典
    d = {}
    # 遍历每个元素
    for elem in elements:
        # 检查元素中冒号的数量
        if elem.count(':') == 1:
            key, val = elem.split(':')
            #print("key= " + key )
        
            subelems = val.strip('[]').split(',')
            #print(type(subelems))
        else:
            key = elem.strip('[]') 
            subelems = []
        # 将子元素存入字典
        d[int(key)*2] = subelems
    return d

# 将字典中的坐标转换为左下角为初始点的数字坐标
def dic2coordinate(coordinate_dic):
    coordinate_number = []
    for key in sorted(coordinate_dic.keys()):
        # print(coordinate_dic[key])
        # print(type(coordinate_of_dic[key]))
        list_tmp = []
        # print(coordinate_dic[key][0])
        # print(char_to_intcoordinate(coordinate_dic[key][1]))
        list_tmp = [letter_to_number(coordinate_dic[key][0]), char_to_intcoordinate(coordinate_dic[key][1])]
        # coordinate_dic[key]
        
        coordinate_number.append(tuple(list_tmp))
    print(coordinate_number)
    return coordinate_number


def letter_to_number(char):
    if char == "":
        return None
    # 将输入字符转换为 ASCII 码值
    ascii_value = ord(char)

    # 如果字符在 A~H 范围内，直接返回 ASCII 码值减去 64
    if ascii_value >= 65 and ascii_value <= 72:
        return ascii_value - 65

    # 如果字符在 J~T 范围内，返回 ASCII 码值减去 65
    if ascii_value >= 74 and ascii_value <= 84:
        return ascii_value - 66

    # 如果字符不在 A~T 范围内，返回 None
    return None

def char_to_intcoordinate(char):

    if char == "":
        return None
    # 将输入字符转换为整数
    num = int(char)

    # 将整数减去1，得到0到18的整数
    return num - 1

# 写入到sgf文件中
def write2sgf(moves):
    # 一个包含黑白棋每一步坐标的数组数据
    # moves = [(0, 0), (1, 0), (0, 1), (1, 1)]
    # 创建一个新的SGF文件
    sgf_game = sgf.Sgf_game(19)  
    # 获取SGF文件的根节点
    root_node = sgf_game.get_root()
    # 设置SGF文件的游戏信息
    root_node.set("GM", 1)
    root_node.set("FF", 4)
    root_node.set("SZ", 19)
    
    # 将每一步棋添加到SGF文件中
    for move in moves:
        # color = "B" if len(sgf_game.get_main_sequence()) % 2 == 0 else "W"
        color = "b" if len(sgf_game.get_main_sequence()) % 2 == 0 else "w"
        node = sgf_game.extend_main_sequence()
        
        # print(color)
        print(move)
        node.set_move(color, move)


    # 将SGF文件写入到文件中
    with open("game_of_jz.sgf", "wb") as f:
        f.write(sgf_game.serialise())
    print("---")
    return

# 测试用的黑棋和白棋数据，从竞智网直接复制的棋谱数据
# s_black = "94:[N,2]93:[S,13]92:[S,8]91:[G,6]90:[E,6]89:[H,7]88:[J,7]87:[O,11]86:[J,10]85:[E,17]84:[C,15]83:[N,16]82:[N,10]81:[Q,13]80:[M,15]79:[L,14]78:[L,13]77:[L,12]76:[A,6]75:[O,11]74:[Q,11]73:[P,10]72:[R,13]71:[P,13]70:[Q,12]69:[P,12]68:[N,13]67:[M,11]66:[M,17]65:[N,18]64:[K,17]63:[P,16]62:[N,14]61:[N,15]60:[L,10]59:[R,8]58:[Q,9]57:[M,9]56:[O,9]55:[N,9]54:[O,8]53:[N,7]52:[P,9]51:[O,4]50:[P,5]49:[P,6]48:[G,7]47:[B,10]46:[C,5]45:[B,5]44:[D,5]43:[C,9]42:[G,11]41:[H,9]40:[B,9]39:[H,8]38:[G,5]37:[F,6]36:[D,3]35:[E,5]34:[F,4]33:[G,10]32:[H,13]31:[H,16]30:[G,13]29:[F,15]28:[D,13]27:[D,12]26:[C,11]25:[L,16]24:[F,13]23:[J,16]22:[F,17]21:[F,14]20:[J,17]19:[P,7]18:[P,3]17:[Q,5]16:[Q,4]15:[O,5]14:[O,3]13:[D,11]12:[C,7]11:[N,17]10:[O,17]9:[Q,16]8:[P,17]7:[Q,14]6:[R,14]5:[Q,15]4:[C,6]3:[E,16]2:[C,16]1:[D,4]"
# s_white = "93:[T,13]92:[S,14]91:[M,10]90:[H,5]89:[F,7]88:[H,6]87:[K,10]86:[L,11]85:[K,11]84:[F,16]83:[E,15]82:[M,16]81:[L,17]80:[P,14]79:[L,15]78:[M,14]77:[M,13]76:[P,11]75:[A,8]74:[R,11]73:[P,11]72:[S,12]71:[O,12]70:[Q,13]69:[R,12]68:[N,12]67:[M,12]66:[L,18]65:[N,19]64:[M,18]63:[K,16]62:[O,13]61:[O,14]60:[O,15]59:[R,10]58:[R,9]57:[L,9]56:[N,11]55:[M,8]54:[N,6]53:[M,7]52:[O,10]51:[N,8]50:[N,4]49:[P,4]48:[Q,6]47:[G,8]46:[A,9]45:[B,7]44:[B,6]43:[D,6]42:[B,8]41:[F,10]40:[G,9]39:[C,8]38:[G,3]37:[F,8]36:[F,5]35:[E,3]34:[E,4]33:[E,10]32:[K,13]31:[G,16]30:[J,13]29:[E,11]28:[E,14]27:[E,13]26:[E,12]25:[C,12]24:[K,15]23:[G,14]22:[H,17]21:[J,15]20:[G,15]19:[G,17]18:[Q,2]17:[R,5]16:[R,4]15:[M,5]14:[M,3]13:[Q,10]12:[D,9]11:[D,7]10:[O,18]9:[R,18]8:[P,18]7:[R,6]6:[R,16]5:[R,15]4:[J,4]3:[F,3]2:[Q,17]1:[Q,3]"

s_black = "92:[S,8]91:[G,6]90:[E,6]89:[H,7]88:[J,7]87:[O,11]86:[J,10]85:[E,17]84:[C,15]83:[N,16]82:[N,10]81:[Q,13]80:[M,15]79:[L,14]78:[L,13]77:[L,12]76:[A,6]75:[O,11]74:[Q,11]73:[P,10]72:[R,13]71:[P,13]70:[Q,12]69:[P,12]68:[N,13]67:[M,11]66:[M,17]65:[N,18]64:[K,17]63:[P,16]62:[N,14]61:[N,15]60:[L,10]59:[R,8]58:[Q,9]57:[M,9]56:[O,9]55:[N,9]54:[O,8]53:[N,7]52:[P,9]51:[O,4]50:[P,5]49:[P,6]48:[G,7]47:[B,10]46:[C,5]45:[B,5]44:[D,5]43:[C,9]42:[G,11]41:[H,9]40:[B,9]39:[H,8]38:[G,5]37:[F,6]36:[D,3]35:[E,5]34:[F,4]33:[G,10]32:[H,13]31:[H,16]30:[G,13]29:[F,15]28:[D,13]27:[D,12]26:[C,11]25:[L,16]24:[F,13]23:[J,16]22:[F,17]21:[F,14]20:[J,17]19:[P,7]18:[P,3]17:[Q,5]16:[Q,4]15:[O,5]14:[O,3]13:[D,11]12:[C,7]11:[N,17]10:[O,17]9:[Q,16]8:[P,17]7:[Q,14]6:[R,14]5:[Q,15]4:[C,6]3:[E,16]2:[C,16]1:[D,4]"
s_white = "92:[S,14]91:[M,10]90:[H,5]89:[F,7]88:[H,6]87:[K,10]86:[L,11]85:[K,11]84:[F,16]83:[E,15]82:[M,16]81:[L,17]80:[P,14]79:[L,15]78:[M,14]77:[M,13]76:[P,11]75:[A,8]74:[R,11]73:[P,11]72:[S,12]71:[O,12]70:[Q,13]69:[R,12]68:[N,12]67:[M,12]66:[L,18]65:[N,19]64:[M,18]63:[K,16]62:[O,13]61:[O,14]60:[O,15]59:[R,10]58:[R,9]57:[L,9]56:[N,11]55:[M,8]54:[N,6]53:[M,7]52:[O,10]51:[N,8]50:[N,4]49:[P,4]48:[Q,6]47:[G,8]46:[A,9]45:[B,7]44:[B,6]43:[D,6]42:[B,8]41:[F,10]40:[G,9]39:[C,8]38:[G,3]37:[F,8]36:[F,5]35:[E,3]34:[E,4]33:[E,10]32:[K,13]31:[G,16]30:[J,13]29:[E,11]28:[E,14]27:[E,13]26:[E,12]25:[C,12]24:[K,15]23:[G,14]22:[H,17]21:[J,15]20:[G,15]19:[G,17]18:[Q,2]17:[R,5]16:[R,4]15:[M,5]14:[M,3]13:[Q,10]12:[D,9]11:[D,7]10:[O,18]9:[R,18]8:[P,18]7:[R,6]6:[R,16]5:[R,15]4:[J,4]3:[F,3]2:[Q,17]1:[Q,3]"

# s_white = "101:[P,7]100:[M,15]99:[L,14]98:[,]97:[E,6]96:[E,5]95:[J,6]94:[J,5]93:[A,5]92:[F,6]91:[K,19]90:[L,19]89:[T,5]88:[C,4]87:[G,6]86:[H,4]85:[K,16]84:[K,15]83:[B,8]82:[B,3]81:[B,5]80:[A,6]79:[A,14]78:[T,16]77:[P,17]76:[M,13]75:[C,11]74:[B,13]73:[K,5]72:[T,6]71:[R,6]70:[K,17]69:[K,18]68:[R,15]67:[L,16]66:[G,8]65:[S,5]64:[S,4]63:[M,5]62:[F,4]61:[G,3]60:[H,3]59:[O,12]58:[P,11]57:[L,5]56:[O,9]55:[O,8]54:[R,13]53:[S,11]52:[D,10]51:[E,10]50:[G,12]49:[G,11]48:[J,13]47:[K,13]46:[S,7]45:[S,10]44:[Q,7]43:[S,9]42:[R,9]41:[H,6]40:[J,4]39:[K,4]38:[K,6]37:[L,7]36:[K,9]35:[L,8]34:[H,7]33:[J,8]32:[J,9]31:[O,6]30:[P,5]29:[P,6]28:[J,12]27:[F,10]26:[H,11]25:[H,10]24:[R,7]23:[F,9]22:[B,7]21:[D,9]20:[C,8]19:[K,14]18:[O,16]17:[F,17]16:[E,18]15:[C,13]14:[C,14]13:[C,15]12:[D,17]11:[J,17]10:[S,14]9:[S,15]8:[P,16]7:[R,16]6:[R,12]5:[C,9]4:[B,4]3:[C,6]2:[D,16]1:[Q,16]"
# s_black = "102:[N,7]101:[P,8]100:[M,14]99:[L,13]98:[D,5]97:[F,4]96:[K,8]95:[K,7]94:[H,5]93:[A,2]92:[M,18]91:[M,19]90:[T,3]89:[C,2]88:[F,5]87:[G,5]86:[G,4]85:[M,16]84:[L,15]83:[B,2]82:[C,6]81:[C,5]80:[A,15]79:[R,18]78:[P,18]77:[M,12]76:[N,13]75:[A,13]74:[B,12]73:[L,6]72:[T,4]71:[R,5]70:[L,17]69:[L,18]68:[N,16]67:[P,14]66:[S,3]65:[R,4]64:[N,6]63:[E,4]62:[G,2]61:[H,2]60:[Q,11]59:[P,10]58:[M,4]57:[O,10]56:[N,9]55:[Q,13]54:[Q,12]53:[R,11]52:[E,8]51:[E,9]50:[F,11]49:[G,10]48:[H,12]47:[K,12]46:[S,6]45:[Q,10]44:[Q,8]43:[R,10]42:[Q,9]41:[J,3]40:[K,3]39:[M,6]38:[M,7]37:[L,10]36:[M,8]35:[F,8]34:[G,7]33:[L,9]32:[N,5]31:[P,4]30:[O,5]29:[L,11]28:[J,11]27:[G,9]26:[J,10]25:[H,9]24:[B,6]23:[D,7]22:[C,7]21:[D,6]20:[D,8]19:[N,17]18:[L,4]17:[C,18]16:[D,18]15:[B,14]14:[B,15]13:[C,16]12:[C,17]11:[O,17]10:[S,17]9:[S,16]8:[Q,17]7:[R,17]6:[R,14]5:[C,3]4:[F,3]3:[Q,5]2:[Q,3]1:[D,4]"

# s_black = "4:[N,2]3:[S,13]2:[S,8]1:[G,6]"
# s_white = "3:[T,13]2:[S,14]1:[M,10]"
# 对原始数据进行第一步处理，用$符号把每步数据断开
s_black_1 = add_dollar_separator(s_black)
s_white_1 = add_dollar_separator(s_white)
# 把数据拆开后放如dictionary，供后续调用
coordinate_of_dic = cov_blackdata2dic(s_black_1)
s_with_white = cov_whitedata2dic(s_white_1)
# 合并黑棋和白棋数据，统一到一个dictionary
coordinate_of_dic.update(s_with_white)
# print(coordinate_of_dic)
coordinate_list = []
coordinate_list = dic2coordinate(coordinate_of_dic)
write2sgf(coordinate_list)
